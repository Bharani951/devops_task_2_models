{"ast":null,"code":"// App.js\nimport React,{useState}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState(\"\");// Handle the change in the input field\nconst handleInputChange=event=>{setNewTask(event.target.value);};// Add a new task to the list\nconst addTask=()=>{if(newTask.trim()!==\"\"){const newTaskObj={id:Date.now(),text:newTask,completed:false};setTasks([...tasks,newTaskObj]);setNewTask(\"\");}};// Toggle the completion status of a task\nconst toggleTaskCompletion=taskId=>{setTasks(tasks.map(task=>task.id===taskId?{...task,completed:!task.completed}:task));};// Remove a task from the list\nconst removeTask=taskId=>{setTasks(tasks.filter(task=>task.id!==taskId));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Todo List\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask,onChange:handleInputChange,placeholder:\"Add a new task\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{style:{textDecoration:task.completed?\"line-through\":\"none\"},children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>toggleTaskCompletion(task.id),children:task.text}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeTask(task.id),children:\"Delete\"})]},task.id))})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","newTask","setNewTask","handleInputChange","event","target","value","addTask","trim","newTaskObj","id","Date","now","text","completed","toggleTaskCompletion","taskId","map","task","removeTask","filter","className","children","type","onChange","placeholder","onClick","style","textDecoration"],"sources":["D:/task-2/mytodoapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Handle the change in the input field\n  const handleInputChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  // Add a new task to the list\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      const newTaskObj = {\n        id: Date.now(),\n        text: newTask,\n        completed: false,\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask(\"\");\n    }\n  };\n\n  // Toggle the completion status of a task\n  const toggleTaskCompletion = (taskId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // Remove a task from the list\n  const removeTask = (taskId) => {\n    setTasks(tasks.filter((task) => task.id !== taskId));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleInputChange}\n          placeholder=\"Add a new task\"\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <ul>\n        {tasks.map((task) => (\n          <li\n            key={task.id}\n            style={{\n              textDecoration: task.completed ? \"line-through\" : \"none\",\n            }}\n          >\n            <span onClick={() => toggleTaskCompletion(task.id)}>\n              {task.text}\n            </span>\n            <button onClick={() => removeTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAU,iBAAiB,CAAIC,KAAK,EAAK,CACnCF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED;AACA,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,GAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACzB,KAAM,CAAAC,UAAU,CAAG,CACjBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdC,IAAI,CAAEZ,OAAO,CACba,SAAS,CAAE,KACb,CAAC,CACDd,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEU,UAAU,CAAC,CAAC,CAChCP,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED;AACA,KAAM,CAAAa,oBAAoB,CAAIC,MAAM,EAAK,CACvChB,QAAQ,CACND,KAAK,CAACkB,GAAG,CAAEC,IAAI,EACbA,IAAI,CAACR,EAAE,GAAKM,MAAM,CAAG,CAAE,GAAGE,IAAI,CAAEJ,SAAS,CAAE,CAACI,IAAI,CAACJ,SAAU,CAAC,CAAGI,IACjE,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAIH,MAAM,EAAK,CAC7BhB,QAAQ,CAACD,KAAK,CAACqB,MAAM,CAAEF,IAAI,EAAKA,IAAI,CAACR,EAAE,GAAKM,MAAM,CAAC,CAAC,CACtD,CAAC,CAED,mBACEnB,KAAA,QAAKwB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB3B,IAAA,OAAA2B,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBzB,KAAA,QAAAyB,QAAA,eACE3B,IAAA,UACE4B,IAAI,CAAC,MAAM,CACXjB,KAAK,CAAEL,OAAQ,CACfuB,QAAQ,CAAErB,iBAAkB,CAC5BsB,WAAW,CAAC,gBAAgB,CAC7B,CAAC,cACF9B,IAAA,WAAQ+B,OAAO,CAAEnB,OAAQ,CAAAe,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACxC,CAAC,cACN3B,IAAA,OAAA2B,QAAA,CACGvB,KAAK,CAACkB,GAAG,CAAEC,IAAI,eACdrB,KAAA,OAEE8B,KAAK,CAAE,CACLC,cAAc,CAAEV,IAAI,CAACJ,SAAS,CAAG,cAAc,CAAG,MACpD,CAAE,CAAAQ,QAAA,eAEF3B,IAAA,SAAM+B,OAAO,CAAEA,CAAA,GAAMX,oBAAoB,CAACG,IAAI,CAACR,EAAE,CAAE,CAAAY,QAAA,CAChDJ,IAAI,CAACL,IAAI,CACN,CAAC,cACPlB,IAAA,WAAQ+B,OAAO,CAAEA,CAAA,GAAMP,UAAU,CAACD,IAAI,CAACR,EAAE,CAAE,CAAAY,QAAA,CAAC,QAAM,CAAQ,CAAC,GARtDJ,IAAI,CAACR,EASR,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}