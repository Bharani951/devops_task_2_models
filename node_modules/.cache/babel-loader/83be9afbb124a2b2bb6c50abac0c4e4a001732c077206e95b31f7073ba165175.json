{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-2\\\\mytodoapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Handle the change in the input field\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n\n  // Add a new task to the list\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      const newTaskObj = {\n        id: Date.now(),\n        text: newTask,\n        completed: false\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask(\"\");\n    }\n  };\n\n  // Toggle the completion status of a task\n  const toggleTaskCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Remove a task from the list\n  const removeTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleInputChange,\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: task.completed ? \"line-through\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleTaskCompletion(task.id),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","handleInputChange","event","target","value","addTask","trim","newTaskObj","id","Date","now","text","completed","toggleTaskCompletion","taskId","map","task","removeTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["D:/task-2/mytodoapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Handle the change in the input field\n  const handleInputChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  // Add a new task to the list\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      const newTaskObj = {\n        id: Date.now(),\n        text: newTask,\n        completed: false,\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask(\"\");\n    }\n  };\n\n  // Toggle the completion status of a task\n  const toggleTaskCompletion = (taskId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // Remove a task from the list\n  const removeTask = (taskId) => {\n    setTasks(tasks.filter((task) => task.id !== taskId));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleInputChange}\n          placeholder=\"Add a new task\"\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <ul>\n        {tasks.map((task) => (\n          <li\n            key={task.id}\n            style={{\n              textDecoration: task.completed ? \"line-through\" : \"none\",\n            }}\n          >\n            <span onClick={() => toggleTaskCompletion(task.id)}>\n              {task.text}\n            </span>\n            <button onClick={() => removeTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}